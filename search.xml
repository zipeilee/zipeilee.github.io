<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>终于用回vscode写LaTeX了</title>
      <link href="/2020/08/13/yong-hui-vscode-xie-latex-liao/"/>
      <url>/2020/08/13/yong-hui-vscode-xie-latex-liao/</url>
      
        <content type="html"><![CDATA[<h2 id="导语"><a href="#导语" class="headerlink" title="导语"></a>导语</h2><blockquote><p>最早接触LaTex用的是CTex这种现在看来很过时的发行版，后来知乎看到一篇文章吹嘘国外某小哥用vim+LaTeX做课堂笔记速度快过手写，本来还想学习一番这位小哥的姿势，但学到使用vim这一步就选择放弃了。刚好那段时间也刚接触vscode，就想着vocode上会不会有相关的LaTeX插件，这样学习成本总会比vim低不少。但那时候的自己对vscode和LaTeX都处于一知半解的程度，按照网上查到的文章去修改配置文件也改的头大，最后总是会出现一些莫名其妙的bug，所以最后还是选择了TexLive+Texstudio这样子的解决方案。现在回过头来，对LaTex和vscode的了解总算是增多了，而vscode的LaTeX Workshop的配置也更加简单了（起码不用再像以前那样对着json文件一顿复制代码了）。<br>那么接下来就讲讲如何配置vscode+LaTeX的开发环境吧，依然是Windows系统下的安装。</p></blockquote><h2 id="安装vscode，TexLive"><a href="#安装vscode，TexLive" class="headerlink" title="安装vscode，TexLive"></a>安装vscode，TexLive</h2><p>vscode直接上<a href="https://code.visualstudio.com/">官网</a>安装即可。</p><p>这里说一下TexLive是什么。用一句话说TexLive就是LaTeX的一个发行版。就像Ubuntu是Linux的一个发行版一样。TexLive目前更新到了TexLive2020, 你当然可以选择去<a href="https://www.tug.org/texlive/">官网</a>下载, 但国内上官网下载比较慢，我们也可以去<a href="https://mirrors.tuna.tsinghua.edu.cn/CTAN/systems/texlive/Images/">清华的镜像站</a>下载。点击<code>texlive.iso</code>进行下载就行。下载完之后双击这个 iso 文件，找到<code>install-tl-windows.bat</code>并双击就开始安装TexLive了，安装过程中所有选项一路默认就行。这软件安装时间会比较久，所以请坐和放宽.</p><p>安装完成之后在CMD中输入命令<code>latex -v</code>以验证是否安装成功。如果出现：<br> </p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">pdfTeX 3.14159265-2.6-1.40.21 (TeX Live 2020/W32TeX)</span><br><span class="line">kpathsea version 6.3.2</span><br><span class="line">Copyright 2020 Han The Thanh (pdfTeX) et al.</span><br><span class="line">There is NO warranty.  Redistribution of this software is</span><br><span class="line">covered by the terms of both the pdfTeX copyright and</span><br><span class="line">the Lesser GNU General Public License.</span><br><span class="line">For more information about these matters, see the file</span><br><span class="line">named COPYING and the pdfTeX source.</span><br><span class="line">Primary author of pdfTeX: Han The Thanh (pdfTeX) et al.</span><br><span class="line">Compiled with libpng 1.6.37; using libpng 1.6.37</span><br><span class="line">Compiled with zlib 1.2.11; using zlib 1.2.11</span><br><span class="line">Compiled with xpdf version 4.02</span><br></pre></td></tr></tbody></table></figure><br>表示安装成功。如果显示找不到命令，那可能是环境变量没有配置成功，可以在搜索找到<code>编辑系统环境变量</code>，然后点<code>高级</code>-&gt;<code>环境变量(N)</code>找到path，往里添加<code>c:\texlive\2020\bin\win32</code>。如果不想这么麻烦的话你也可以选择重装一遍。<p></p><h2 id="LaTeX-Workshop-插件配置"><a href="#LaTeX-Workshop-插件配置" class="headerlink" title="LaTeX Workshop 插件配置"></a>LaTeX Workshop 插件配置</h2><p>打开你安装好的vscode，在侧边栏的拓展选项卡中搜索latex，选择LaTeX Workshop并进行安装。如图：</p><p><img src="https://github.com/zipeilee/mdphotos/tree/master/vslatex/aztz.png" alt="安装插件"></p><p>接下来就是配置插件了。我们在合适的文件夹随便新建一个<code>demo.tex</code>文件，并点击侧边栏里的<code>TeX</code>字样的按钮，将会看到如图界面：</p><p><img src="https://github.com/zipeilee/mdphotos/tree/master/vslatex/cjjm.png" alt="插件界面"></p><p>在这里有两个很重要的概念需要说明:工具（Tools）和组合（Recipe）。</p><blockquote><p>工具（Tool）指编译器，常见的主要有 pdfLaTeX、XeLaTeX、LuaLaTeX 。他们的区别可以参考<a href="https://www.kancloud.cn/thinkphp/latex/41811">一份其实很短的LaTeX入门指南</a>。一般如果需要用中文进行写作，我们用<code>XeLaTeX</code> 就好。</p></blockquote><blockquote><p>组合（Recipe）即编译器的组合使用，当你的 LaTeX 文件涉及引用等比较复杂的需求时需要进行组合编译。LaTeX Workshop 本身提供了多个编译组合，在功能区中点击 “Build LaTeX Project” 可以看到所有默认组合。以 pdfLaTeX→bibTeX→pdfLaTeX * 2 为例，它会先运行一次 pdfLaTeX，一次 bibTeX，再运行两次 pdfLaTeX，最终生成带有交叉引用的完整 PDF。LaTeX Workshop 每次默认会采用第一个编译组合进行编译.</p></blockquote><h3 id="设置编工具和组合"><a href="#设置编工具和组合" class="headerlink" title="设置编工具和组合"></a>设置编工具和组合</h3><p>如上文所说，如果需要写中文的pdf文件的话，我们常用的编译器是<code>xelatex</code>，因此我们可以设置一个常用的一个编译组合 <code>XeLaTeX-&gt;bibTeX-&gt;XeLaTeX*2</code> 并把它放到第一个(因为第一个是默认的)。于是我们点击插件选项，找到 <code>LaTeX Workshop</code>并点击小齿轮进入拓展设置界面，在顶部的搜索栏输入 <code>recipe</code>，然后找到 <code>LaTeX Workshop&gt;LaTeX:Recipes</code>,点击<code>在setting.json中编辑</code>，并且在跳出来的json文件中的<code>"latex-workshop.latex.recipes": [</code> 后面复制如下代码并保存：</p><figure class="highlight"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">{</span><br><span class="line">    <span class="attr">"name"</span>: <span class="string">"xelatex -&gt; bibtex -&gt; xelatex*2"</span>,</span><br><span class="line">    <span class="attr">"tools"</span>: [</span><br><span class="line">            <span class="string">"xelatex"</span>,</span><br><span class="line">            <span class="string">"bibtex"</span>,</span><br><span class="line">            <span class="string">"xelatex"</span>,</span><br><span class="line">            <span class="string">"xelatex"</span></span><br><span class="line">    ]</span><br><span class="line">},</span><br></pre></td></tr></tbody></table></figure><p>如图：<br><img src="https://github.com/zipeilee/mdphotos/tree/master/vslatex/setting.png" alt="setting"></p><p>当然，很多时候我们写一些轻量级的文档或笔记，可能不需要引用参考文献，因此编译链中的<code>bibtex</code>变得不再需要，因此我们也可以设置一个只有xelatex的简单的编译链：</p><figure class="highlight json"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">{</span><br><span class="line">    <span class="attr">"name"</span>: <span class="string">"only-xelatex"</span>,</span><br><span class="line">    <span class="attr">"tools"</span>:[</span><br><span class="line">        <span class="string">"xelatex"</span></span><br><span class="line">    ]</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>但是插件默认的<code>tools</code>里是没有<code>xelatex</code>的，因此你还要把<code>xelatex</code>加入到tools中。在刚刚的拓展设置界面里搜索<code>tools</code>,找到<code>LaTeX Workshop&gt;LaTeX:Tools</code>，点击<code>在setting.json中编辑</code>，并且在跳出来的json文件中的 <code>"latex-workshop.latex.tools": [</code> 后面复制如下代码并保存：</p><figure class="highlight"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">{</span><br><span class="line">    <span class="comment">// 编译工具和命令</span></span><br><span class="line">    <span class="attr">"name"</span>: <span class="string">"xelatex"</span>,</span><br><span class="line">    <span class="attr">"command"</span>: <span class="string">"xelatex"</span>,</span><br><span class="line">    <span class="attr">"args"</span>: [</span><br><span class="line">                <span class="string">"-synctex=1"</span>,</span><br><span class="line">                <span class="string">"-interaction=nonstopmode"</span>,</span><br><span class="line">                <span class="string">"-file-line-error"</span>,</span><br><span class="line">                <span class="string">"-pdf"</span>,</span><br><span class="line">                <span class="string">"%DOCFILE%"</span></span><br><span class="line">    ]</span><br><span class="line">},  </span><br></pre></td></tr></tbody></table></figure><p>这样我们的编译工具就配置完成了。</p><h3 id="编译和预览"><a href="#编译和预览" class="headerlink" title="编译和预览"></a>编译和预览</h3><p>我们可以在demo.tex文件中写一些简单的代码进行测试，比如：</p><figure class="highlight tex"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">\<span class="name">documentclass</span><span class="string">{article}</span></span></span><br><span class="line"><span class="tag">\<span class="name">usepackage</span><span class="string">{ctex}</span></span></span><br><span class="line"><span class="tag">\<span class="name">begin</span><span class="string">{document}</span></span></span><br><span class="line">你好，世界!</span><br><span class="line">我giao！</span><br><span class="line"><span class="tag">\<span class="name">end</span><span class="string">{document}</span></span></span><br></pre></td></tr></tbody></table></figure><p>写好之后就可以编译了。我们可以点击左侧的<code>Build LaTeX project</code>或者使用快捷键 <code>Ctrl+Alt+B</code> 使用默认的第一个组合进行编译，也可以点击其中的某一个，比如我们刚刚设置的名为 <code>only-xelatex</code> 组合进行编译。</p><p>编译之后就是预览了，直接使用快捷键 <code>Ctrl+Alt+V</code> 即可预览pdf文件，我更喜欢vscode自带的tab浏览，你也可以选择用web浏览器浏览pdf文件或使用外部程序进行浏览。</p><h3 id="正向搜索和反向搜索"><a href="#正向搜索和反向搜索" class="headerlink" title="正向搜索和反向搜索"></a>正向搜索和反向搜索</h3><p>LaTeX Workshop 支持从.tex 文件跳转到 PDF 相应位置（正向搜索），以及从 PDF 跳转到.tex 相应位置（反向搜索）。</p><p>正向搜索直接把光标停在<code>.tex</code>文件你需要搜索的位置并点击左侧的 “SyncTeX from cursor” 即可，当然你也看使用快捷键 <code>Ctrl+Alt+J</code> 。</p><p>而反向搜索，在你的pdf文件需要搜索的位置上按<code>Ctrl</code>+鼠标左键即可。</p><p>需要注意的是不要删除 XeLaTeX 生成的.synctex.gz 文件，否则正向 / 反向搜索功能将会失效。</p><p>以往就是vscode+latex的基本配置了。而关于latex的入门这份<a href="https://liam.page/2014/09/08/latex-introduction/">很短的入门文档</a>十分不错。其实latex也好，编程语言也好，最重要的是要自己写起来。而使用过程中如果有什么问题学会上搜索引擎进行检索就好。Enjoy it!</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 嗑研 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LaTeX </tag>
            
            <tag> vscode </tag>
            
            <tag> 开发环境 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>给科研工作者们的简短python入门教程</title>
      <link href="/2020/08/11/gei-ke-yan-gong-zuo-zhe-men-de-jian-duan-python-ru-men-jiao-cheng/"/>
      <url>/2020/08/11/gei-ke-yan-gong-zuo-zhe-men-de-jian-duan-python-ru-men-jiao-cheng/</url>
      
        <content type="html"><![CDATA[<h2 id="导语"><a href="#导语" class="headerlink" title="导语"></a>导语</h2><blockquote><p>这份教程面向非计算机专业，主要希望用python解决一些磕盐工作中的数据处理，科学计算等问题的科研工作者们。因此许多内容不需要了解，故教程尽量做到精简，而不保证全面。制作这个教程的目的是为了减少初学者的畏惧心理，让没有接触过编程的大家明白：原本来使用python这么简单。在实际工作中使用python这个教程里的知识肯定不够，这时候大家就应该找一些全面而详细（比如python的官方文档）的资料看或者学会在遇到问题时善于从搜索引擎以及<a href="https://github.com/">Github</a><a href="https://stackoverflow.com/">Stack Overflow</a>等社区寻找答案了。<br>教程使用<code>Jupyter Notebook</code>书写，可以直接在网页查看，也可以下载下来自己试着运行。</p></blockquote><h2 id="配置开发环境"><a href="#配置开发环境" class="headerlink" title="配置开发环境"></a>配置开发环境</h2><p>使用一门编程语言当然首先需要安装一个开发环境。对于非计算机专业的初学者来说，可以把<code>Python</code>当作一个像<code>MATLAB</code>或者<code>Mathematica</code>一样的科学计算软件，只不过这个软件的下载安装要分好几步来进行，不能像<code>matlab</code>一样一部到位罢了。那么配置这个你所需要的<strong>python软件</strong>就是所谓的安装开发环境了。关于开发环境的配置可以看我在b站的视频<a href="https://www.bilibili.com/video/BV1Yt4y1X7Rv">python 入门：搭建一个好用又好看的的开发环境</a></p><h2 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h2><ul><li><a href="https://nbviewer.jupyter.org/github/zipeilee/pytonew/blob/master/lecture/use_list.ipynb">python基本数据类型，使用<code>list</code>, <code>tuple</code>和<code>dict</code></a></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 磕盐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> jupyter notebook </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2020/08/11/hello-world/"/>
      <url>/2020/08/11/hello-world/</url>
      
        <content type="html"><![CDATA[<p>重新出发</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
